version: "2.4"

services:
  # A servercore image with both the netcore and netframework SDKs.
  # See Dockerfile for more details.
  dotnetsdk:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-dotnetsdk:${VERSION:-latest}
    build:
      context: ./build/dotnetsdk
      args:
        BUILD_IMAGE: ${SOLUTION_BUILD_IMAGE}
        NETCORE_BUILD_IMAGE: ${NETCORE_BUILD_IMAGE}
    scale: 0

  # The solution build image is added here so it can be referenced as a build dependency
  # for the images which use its output. Setting "scale: 0" means docker-compose will not
  # include it in the running environment. See Dockerfile for more details.
  solution:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    build:
      context: ../
      dockerfile: ./docker/build/solution/Dockerfile
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION}
        BASE_IMAGE: ${SOLUTION_BASE_IMAGE}
        BUILD_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-dotnetsdk:${VERSION:-latest}
    depends_on:
      - dotnetsdk
    scale: 0

  traefik:
    volumes:
      - ./traefik:C:/etc/traefik
    depends_on:
      - cm

  mssql:
    volumes:
      - ${LOCAL_DATA_PATH}\mssql:c:\data
    mem_limit: ${MEM_LIMIT_SQL:-2GB}           
  
  mssql-init:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-mssql-init:${SITECORE_VERSION}
    build:
      context: ./build/mssql-init
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-mssql-init:${SITECORE_VERSION}
        SPE_RESOURCES_IMAGE: ${SPE_RESOURCES_IMAGE}

  solr:
    volumes:            
      - ${LOCAL_DATA_PATH}\solr:c:\data  
    mem_limit: ${MEM_LIMIT_SOLR:-1GB}  

  solr-init:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solr-init:${SITECORE_VERSION}
    build:
      context: ./build/solr-init
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-solr-init:${SITECORE_VERSION}                
  
  id:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-id6:${SITECORE_VERSION}
    build:
      context: ./build/id
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${ID_IMAGE}:${SITECORE_VERSION}
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license

  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-cm:${SITECORE_VERSION}
    build:
      context: ./build/cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${CM_IMAGE}:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
        TOOLS_RESOURCES_IMAGE: ${TOOLS_RESOURCES_IMAGE}
        DEVEX_RESOURCES_IMAGE: ${DEVEX_RESOURCES_IMAGE}
        SPE_RESOURCES_IMAGE: ${SPE_RESOURCES_IMAGE}
    volumes:
      - ${LOCAL_DEPLOY_PATH}\platform:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      SITECORE_DEVELOPMENT_PATCHES: CustomErrorsOff
    depends_on:
      - solution
    mem_limit: ${MEM_LIMIT_CM:-4GB}        
    entrypoint: powershell.exe -Command "& C:\tools\entrypoints\iis\Development.ps1"
